
import React from 'react';
import { Feature, Language } from '../types';

interface FeatureSelectorProps {
  onSelectFeature: (feature: Feature) => void;
  language: Language;
}

const featureLabels: Record<Language, Record<Feature, string>> = {
    en: {
        [Feature.ITINERARY]: 'Plan an Itinerary',
        [Feature.SOUVENIR]: 'Find Souvenirs',
        [Feature.LOCATION]: 'Location Suggestions',
        [Feature.LANGUAGE]: 'Language Help',
    },
    hi: {
        [Feature.ITINERARY]: 'рдпрд╛рддреНрд░рд╛ рдпреЛрдЬрдирд╛ рдмрдирд╛рдПрдВ',
        [Feature.SOUVENIR]: 'рд╕реНрдореГрддрд┐ рдЪрд┐рдиреНрд╣ рдЦреЛрдЬреЗрдВ',
        [Feature.LOCATION]: 'рд╕реНрдерд╛рди рд╕реБрдЭрд╛рд╡',
        [Feature.LANGUAGE]: 'рднрд╛рд╖рд╛ рд╕рд╣рд╛рдпрддрд╛',
    },
    bn: {
        [Feature.ITINERARY]: 'ржнрзНрж░ржоржгрж╕рзВржЪрзА ржкрж░рж┐ржХрж▓рзНржкржирж╛ ржХрж░рзБржи',
        [Feature.SOUVENIR]: 'рж╕рзНржорж╛рж░ржХ ржЦрзБржБржЬрзБржи',
        [Feature.LOCATION]: 'ржЕржмрж╕рзНржерж╛ржи ржкрж░рж╛ржорж░рзНрж╢',
        [Feature.LANGUAGE]: 'ржнрж╛рж╖рж╛ рж╕рж╣рж╛ржпрж╝рждрж╛',
    },
    mr: {
        [Feature.ITINERARY]: 'рдкреНрд░рд╡рд╛рд╕рд╛рдЪреА рдпреЛрдЬрдирд╛ рдХрд░рд╛',
        [Feature.SOUVENIR]: 'рд╕реНрдореГрддрд┐рдЪрд┐рдиреНрд╣реЗ рд╢реЛрдзрд╛',
        [Feature.LOCATION]: 'рд╕реНрдерд╛рди рд╕реВрдЪрдирд╛',
        [Feature.LANGUAGE]: 'рднрд╛рд╖рд╛ рдорджрдд',
    },
    te: {
        [Feature.ITINERARY]: 'р░кр▒Нр░░р░пр░╛р░г р░кр▒Нр░░р░гр░╛р░│р░┐р░Х р░Ър▒Зр░пр░Вр░бр░┐',
        [Feature.SOUVENIR]: 'р░Ьр▒Нр░Юр░╛р░кр░┐р░Хр░▓р░ир▒Б р░Хр░ир▒Бр░Чр▒Кр░ир░Вр░бр░┐',
        [Feature.LOCATION]: 'р░╕р▒Нр░ер░╛р░и р░╕р▒Вр░Ър░ир░▓р▒Б',
        [Feature.LANGUAGE]: 'р░нр░╛р░╖р░╛ р░╕р░╣р░╛р░пр░В',
    },
    ta: {
        [Feature.ITINERARY]: 'рокропрогродрпНродро┐роЯрпНроЯродрпНродрпИродрпН родро┐роЯрпНроЯрооро┐роЯрпБроЩрпНроХро│рпН',
        [Feature.SOUVENIR]: 'роиро┐ройрпИро╡рпБрокрпНрокрпКро░рпБроЯрпНроХро│рпИроХрпН роХрогрпНроЯро▒ро┐ропро╡рпБроорпН',
        [Feature.LOCATION]: 'роЗроЯ роЖро▓рпЛроЪройрпИроХро│рпН',
        [Feature.LANGUAGE]: 'роорпКро┤ро┐ роЙродро╡ро┐',
    }
};


const features = [
  { id: Feature.ITINERARY, icon: 'ЁЯЧ║я╕П' },
  { id: Feature.SOUVENIR, icon: 'ЁЯЫНя╕П' },
  { id: Feature.LOCATION, icon: 'ЁЯУН' },
  { id: Feature.LANGUAGE, icon: 'ЁЯМР' },
];

const FeatureSelector: React.FC<FeatureSelectorProps> = ({ onSelectFeature, language }) => {
  return (
    <div className="grid grid-cols-2 gap-3">
      {features.map((feature) => (
        <button
          key={feature.id}
          onClick={() => onSelectFeature(feature.id)}
          className="flex flex-col items-center justify-center text-center p-4 bg-gray-700 rounded-lg hover:bg-purple-600/50 transition-colors"
        >
          <span className="text-2xl mb-2">{feature.icon}</span>
          <span className="text-sm font-medium">{featureLabels[language][feature.id]}</span>
        </button>
      ))}
    </div>
  );
};

export default FeatureSelector;